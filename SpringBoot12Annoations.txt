OP 12 Annotations of Spring Boot Framework


1. @SpringBootApplication

@EnableAutoConfiguration + @ComponentScan + @Configuration

2. @Configration(we can use this configuration on any class , in that that class we will write the methods which will return beans ,(when we use @configuration on any class that class becomes configration class that means this class is a source of bean definition and its one of the essential annotation , it wyll have many methods and it returns beans, )
)


@Configration annotation will be used with the Class , this class will have one or more methods which will return beans (methods marked with @Bean)

@Bean annotation we use inside the class marked with @Configuration class,  to tell that this method will return bean that will be managed by the container

no need to call this method marked with bean to create the object object will be created by itself, we can just use the object

3. @Bean
4. @Autowired ( it will autowire deendency autometocally, container chcek if it has any object of student type then it injects or thows exception
here @Autowired 
	private	Student student;
)
autowire we can do on property, setter , constructor also



5. @Component - instead of declaring a @bean over a method to craete a clas object, we can use @Component over a class 
, it is a compenent conatiner will manage its lifecycle,
=> 
component annotation when we use with a class that class becomes spring component ad spring conatinedr takes care of it, its object managed by spring container


but inside component it has 3 annotations 
@Controller -> it is comonent but it is specific to controller=it is component but it will take care of MVC controller also(presentation layer to male mvc contoler)

it is contoller but also a component
 



pure function
higher order function

flat map

life of entity

lazy loading

lazy intialization exception

Lazy loading hibernate

compooite key how u map
2 columns ()



retry

console service discovery



  @Controller (Component,MVC Contoller)
  @Service ob business class 
  @Repository on dao class
  
  
  
6. @ComponentScan can scan a package with this
7. @Qualifier  

for eg when we are creating two @beans then conatiner is confuesd which to inject for
@Qualifier("student1")
@Autowired 
Student student;







8. @Lazy when object needed then only created, for that we use @Lazy, if not needed object wont get created

9. ResponseBody 
tell a controller that the  object returned is autometically serialized into json anmd get passed back into http response

jo method me hum reurn karte hai , usko ye json me convert karke , http Respinse me pack karke return kar deta hai

  

10. RequestBody
jab koi data form se aata hai, 
jo data json me aa raha hai , wo autometically object me convert hoga




11. @RestController
=(ResponseBody + @Controller)


12. @PathVariable - jab bhi koi value url me aa raha hota hai, localhost:8080/user/{id}
id id uri variable

@RequestParam("email") String email -jab data for se aa raha hai

tyoes of injection in spring

@RequestMapping(value="/home", method=RequestMethod.GET)
maps the request to this method, when this req made this method will be called




springboot tutrial

exam portal

blog application

microservices tutorial in hindi in 2023


